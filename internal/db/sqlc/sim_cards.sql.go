// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: sim_cards.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createSimCard = `-- name: CreateSimCard :one
INSERT INTO sim_cards (
  mobile_number,
  type
) VALUES (
  $1, $2
) RETURNING mobile_number, type, created_at, updated_at
`

type CreateSimCardParams struct {
	MobileNumber string      `json:"mobile_number"`
	Type         pgtype.Text `json:"type"`
}

func (q *Queries) CreateSimCard(ctx context.Context, arg CreateSimCardParams) (SimCard, error) {
	row := q.db.QueryRow(ctx, createSimCard, arg.MobileNumber, arg.Type)
	var i SimCard
	err := row.Scan(
		&i.MobileNumber,
		&i.Type,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const getSimCard = `-- name: GetSimCard :one
SELECT mobile_number, type, created_at, updated_at FROM sim_cards
WHERE mobile_number = $1 LIMIT 1
`

func (q *Queries) GetSimCard(ctx context.Context, mobileNumber string) (SimCard, error) {
	row := q.db.QueryRow(ctx, getSimCard, mobileNumber)
	var i SimCard
	err := row.Scan(
		&i.MobileNumber,
		&i.Type,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
