// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: misol.sql

package db

import (
	"context"
)

const createMisolStation = `-- name: CreateMisolStation :one
INSERT INTO misol_station (
  id,
  station_id
) VALUES (
  $1, $2
) RETURNING id, station_id
`

type CreateMisolStationParams struct {
	ID        int64 `json:"id"`
	StationID int64 `json:"station_id"`
}

func (q *Queries) CreateMisolStation(ctx context.Context, arg CreateMisolStationParams) (MisolStation, error) {
	row := q.db.QueryRow(ctx, createMisolStation, arg.ID, arg.StationID)
	var i MisolStation
	err := row.Scan(&i.ID, &i.StationID)
	return i, err
}

const deleteMisolStation = `-- name: DeleteMisolStation :exec
DELETE FROM misol_station WHERE id = $1
`

func (q *Queries) DeleteMisolStation(ctx context.Context, id int64) error {
	_, err := q.db.Exec(ctx, deleteMisolStation, id)
	return err
}

const getMisolStation = `-- name: GetMisolStation :one
SELECT id, station_id FROM misol_station
WHERE id = $1 LIMIT 1
`

func (q *Queries) GetMisolStation(ctx context.Context, id int64) (MisolStation, error) {
	row := q.db.QueryRow(ctx, getMisolStation, id)
	var i MisolStation
	err := row.Scan(&i.ID, &i.StationID)
	return i, err
}
